name: Docker Nightly Image CI
run-name: Build ${{ inputs.branch }} - ${{ inputs.user }}

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'GitHub branch to create image off.'
        required: true
        default: 'master'
      tag:
        description: 'Name of the docker tag to create.'
        required: true
        default: 'nightly'
      merge-master:
        description: 'Merge with master.'
        type: boolean
        required: true
        default: false
      docker-hub-push:
        description: 'Docker Hub push?'
        type: boolean
        required: true
        default: true
      ghcr-push:
        description: 'GHCR.io push?'
        type: boolean
        required: true
        default: false
      user:
        description: ''
        required: false
        default: 'schedule'
      start-url:
        description: 'URL to call after workflow is kicked off.'
        required: false
        default: ''
      success-url:
        description: 'URL to call after Docker Image got built successfully.'
        required: false
        default: ''

env:
  N8N_TAG: ${{ inputs.tag || 'nightly' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Call Start URL - optionally
        run: |
          [[ "${{github.event.inputs.start-url}}" != "" ]] && curl -v -X POST -d 'url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' ${{github.event.inputs.start-url}} || echo ""
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.inputs.branch || 'master' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to DockerHub
        if: github.event.inputs.docker-hub-push == 'true'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: github.event.inputs.ghcr-push == 'true'
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Master - optionally
        run: |
          [[ "${{github.event.inputs.merge-master}}" == "true" ]] && git remote add upstream https://github.com/n8n-io/n8n.git -f; git merge upstream/master --allow-unrelated-histories || echo ""
        shell: bash

      - name: Generate Docker Hub Tags
        if: github.event.inputs.docker-hub-push == 'true'
        id: generate_tags
        run: |
          TAGS=""
          for TAG in $(echo "${{ env.N8N_TAG }}" | tr ',' '\n'); do
            TAGS="$TAGS ${{ secrets.DOCKER_USERNAME }}/n8n:$TAG"
          done
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Generate GHCR Tags
        if: github.event.inputs.ghcr-push == 'true'
        id: generate_ghcr_tags
        run: |
          TAGS=""
          for TAG in $(echo "${{ env.N8N_TAG }}" | tr ',' '\n'); do
            TAGS="$TAGS ghcr.io/${{ github.repository_owner }}/n8n:$TAG"
          done
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./docker/images/n8n-custom/Dockerfile
          build-args: |
            N8N_RELEASE_TYPE=stable
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.generate_tags.outputs.tags || '' }}
            ${{ steps.generate_ghcr_tags.outputs.tags || '' }}

      - name: Call Success URL - optionally
        run: |
          [[ "${{github.event.inputs.success-url}}" != "" ]] && curl -v ${{github.event.inputs.success-url}} || echo ""
        shell: bash
